// Generated by Dagger (https://dagger.dev).
package com.example.currencieslist.rates;

import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RatesPresenter_Factory implements Factory<RatesPresenter> {
  private final Provider<RatesInteractor> interactorProvider;

  private final Provider<ImageResolver> imageResolverProvider;

  public RatesPresenter_Factory(Provider<RatesInteractor> interactorProvider,
      Provider<ImageResolver> imageResolverProvider) {
    this.interactorProvider = interactorProvider;
    this.imageResolverProvider = imageResolverProvider;
  }

  @Override
  public RatesPresenter get() {
    return new RatesPresenter(interactorProvider.get(), imageResolverProvider.get());
  }

  public static RatesPresenter_Factory create(Provider<RatesInteractor> interactorProvider,
      Provider<ImageResolver> imageResolverProvider) {
    return new RatesPresenter_Factory(interactorProvider, imageResolverProvider);
  }

  public static RatesPresenter newInstance(RatesInteractor interactor,
      ImageResolver imageResolver) {
    return new RatesPresenter(interactor, imageResolver);
  }
}
